------------------------------------
proc 파일시스템
------------------------------------
------------
https://zetawiki.com/wiki/Proc_%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C
------------
proc filesystem(procfs)
리눅스 계열 OS에서 프로세스와 시스템 정보를 계층적 파일구조 형식으로 
보여주는 특수·가상 파일시스템

편리하고 표준적인 방식인 동적으로 커널이 소유하는 프로세스 데이터에 접근 가능
부팅시 /proc 이라는 마운트 포인트에 매핑됨

커널에서 내부 데이터 구조체에 대한 인터페이스처럼 작동
런타임 중에 커널 파라미터 조회·변경에 사용됨

파일들이 0바이트로 보이지만 cat으로 조회시 내용이 보임
ex) 
ls -l /proc/version
cat /proc/version	

------------
http://mintnlatte.tistory.com/137
------------
proc 파일시스템 : 디스크 대신, 메모리에 위치하는 파일시스템이다

/proc 디렉토리에 포함된 파일들을 통해 시스템의 정보나 커널 및 현재 실행중인
task의 각종 정보를 알수 있다
cat /proc/cpuinfo 	: cpu에 대한 설명을 볼 수 있다
cat /proc/meminfo 	: 메모리 사용의 세부사항을 볼 수 있다

/proc 디렉토리 내에 숫자로 표시되는 디렉토리는 생성되는 task의 PID로서 하위 디렉토리는
해당 디스크 관련정보가 들어있다
-> 해당 디스크 관련 정보를 통해 사용자 레벨에서 task의 상태를 간단히 확인할 수 있다

------------
http://kyubuem.tistory.com/34
------------
시스템내의 정보를(커널 정보)를 사용자 영역에서 쉽게 볼수 있게 해주는 것.

------------
http://www.test104.com/kr/tech/3589.html
------------
/proc 가상 파일 시스템은 커널과 사용자 영역 사이에서 통신이라는 윈도우를 열어준다

/proc 파일 시스템은 리눅스(Linux®) 커널과 사용자 영역 사이에 일어나는 통신 채널을 제공하는 멋진 가상 파일 시스템입니다

------------
https://www.joinc.co.kr/w/Site/system_programing/proc/ProcFsPrograming  - ★★★
------------
------------
https://www.joinc.co.kr/w/Site/system_programing/proc/GetSMSInf  - ★★★
------------
------------
발생 에러 해석
------------

[root@localhost ~]# find / -size +30M -size -50M |more 5
find: ‘/proc/17371/task/17371/fd/6’: 그런 파일이나 디렉터리가 없습니다
find: ‘/proc/17371/task/17371/fdinfo/6’: 그런 파일이나 디렉터리가 없습니다
find: ‘/proc/17371/fd/6’: 그런 파일이나 디렉터리가 없습니다
find: ‘/proc/17371/fdinfo/6’: 그런 파일이나 디렉터리가 없습니다
-----------------------------------------------------

/proc/PID/fd, 각 열린 파일 서술자에 대한 심볼릭 링크를 포함하는 디렉토리.
/proc/PID/task, 이 프로세스에 의해 시작된 작업들에 대한 하드 링크를 포함하는 디렉토리.
/proc/PID/fdinfo, 각 열린 파일 서술자에 대한 위치와 플래그들을 서술하는 엔트리들을 
포함하는 디렉토리.

-----------------------------------------------------
https://ko.wikipedia.org/wiki/Procfs
리눅스에서 /proc은 커널 프로세스를 포함하는 각 실행 중인 프로세스들을 위한 디렉토리를 
포함하며 디렉토리는 /proc/PID라는 이름을 갖는다(PID는 프로세스 번호이다). 각 디렉토리는
 한 프로세스에 관한 정보 뿐만 아니라 다음을 포함한다:

/proc/PID/cmdline, 프로세스를 시작한 명령어.
/proc/PID/cwd, 프로세스의 현재 작업 디렉토리에 대한 심볼릭 링크.
/proc/PID/environ는 프로세스에 영향을 미치는 환경 변수들의 이름과 값들을 포함한다.
/proc/PID/exe, 존재하는 경우 원본 실행 파일에 대한 심볼릭 링크.
/proc/PID/fd, 각 열린 파일 서술자에 대한 심볼릭 링크를 포함하는 디렉토리.
/proc/PID/fdinfo, 각 열린 파일 서술자에 대한 위치와 플래그들을 서술하는 엔트리들을 
포함하는 디렉토리.
/proc/PID/maps, 매핑된 파일들과 블록들(힙과 스택 같은)에 대한 정보를 포함하는 텍스트 파일.
/proc/PID/mem, 프로세스의 가상 메모리를 보여주는 바이너리 이미지로서 오직 ptrace 하는 
프로세스에 의해서만 접근될 수 있다.
/proc/PID/root, 프로세스에 의해 보여지는 루트 경로에 대한 심볼릭 링크. 프로세스가 chroot jail에서 실행중이지 않은 이상 대부분의 프로세스들에서 이것은 /에 링크된다.
/proc/PID/status는 실행 상태와 메모리 사용을 포함하는 프로세스에 대한 기본 정보들을 갖는다.
/proc/PID/task, 이 프로세스에 의해 시작된 작업들에 대한 하드 링크를 포함하는 디렉토리.
PID는 pgrep, pidof 또는 ps 같은 유틸리티들에 의해서 얻을 수 있다: